StaleElementReferenceException - Веб-элемента нет в текущем состоянии DOM
    Почему так случилось?
    - После перезагрузки страницы (Page Refresh)
    - Или выхода пользователя из страницы
    - Или веб-элемент по какой-то причине заменен на другой, с идентичными атрибутами

    Как обработать ошибку StaleElementReferenceException
    - Обновить страницу, и теперь проверить веб-элемент. (Не рекомендуется, если при перезагрузке стираются
      сессионные данные / введенные пользователем данные)
    - Для проверки элемента воспользоваться интерфейсом JavaScriptExecutor
    - Имплементировать конструкцию try-catch, то есть “ловить” элемент блоком catch
    - Применить эксплицитное ожидание (explicit wait) — то есть ожидать появления элемента

NoSuchElementException - WebDriver не может найти локальный элемент, то есть через метод FindBy кажется нельзя
найти этот элемент
    Причины ошибки NoSuchElementException
    - неправильно прописан локатор в методе findElement(by)
    - Имя элемента изменено разработчиком
    - Позиция элемента изменилась (если ищут локатором XPath)
    - Время загрузки элемента прописано слишком большое

    Как устранить причину NoSuchElementException
    - исправить локатор
    - добавить wait-команду
    - добавить блок try-catch, и/или эксплицитное ожидание элемента

ElementClickInterceptedException - Невозможно выполнить команду, из-за того что элемент, “получающий” событие,
скрывает за собой запрашиваемый элемент.
    Причины ошибки ElementClickInterceptedException
    - Элементы “перекрываются” между собой
    - Один из элементов не загрузился как положено
    - Один из элементов отключен (disabled)
    - Элемент не в фокусе
    - Действие с некорректным веб-элементом
    - Этот элемент нельзя искать на странице по его координатам

    Как устранить ElementClickInterceptedException
    - Добавить wait-ожидание пока элемент не будет доступен
    - Применить JavascriptExecutor для операции клика
    - Если элемент “некликабельный”, найти и закрыть “накрывающий” элемент (находящийся сверху нужного нам)
    - Если элементу нужен фокус, перейти на активный элемент и выполнить клик, используя класс Action.
    - Если для идентификации элемента используются координаты, попробовать сначала развернуть окно
      в полностью развернутое состояние.

NoSuchWindowException - частая ошибка в Selenium WebDriver, когда текущий список окон некорректно
обновился — предыдущего окна не существует, значит нельзя переключиться на него.
    Решение: через метод WebDriver’а, driver.getWindowHandles().

NoSuchFrameException - Возникает аналогично предыдущему (NoSuchWindowException) — при переключении между
фреймами один из них становится недоступен.
    Решение: через метод WebDriver’а, driver.getWindowHandles().

TimeoutException - Операция не выполнилась (не завершилась) в нужное время.
    Ожидания (waits) грамотно применяются опытными тестировщиками во избежание частой ошибки №2,
    NoSuchElementException, однако если элементы страницы не загрузились в прописанное wait-время, будет
    “выброшена” ошибка timeoutException.
    Решение: тривиальное — узнать (оценить) среднее время загрузки страницы и “подобрать” к нему подходящее
    wait-время.

ElementNotVisibleException - WebDriver пытается найти элемент, по какой-то причине “заслоненный” другим,
или в состоянии “невидимый”.