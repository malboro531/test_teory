1. xp
Концепция строится на основании приёмов:
    - Разработка через тестирование (Test-driven development)

    - Игра в планирование (Planning game)

    - Заказчик всегда рядом (Onsite customer)

    - Парное программирование (Pair programming)

    - Непрерывная интеграция (Continuous integration)

    - Рефакторинг (Design improvement)

    - Частые небольшие релизы (Small releases)

    - Простота проектирования (Simple design)

    - Коллективное владение кодом (Collective code ownership)

    - Стандарт оформления кода (Coding standard)

    - 40-часовая рабочая неделя (Sustainable pace)

2. Lean
Принципы:
    - Ликвидировать потери.
    Если действие не улучшает качество продукта, не приносит прибыли заказчику и не экономит время
    разработчика, то его нужно исключить.

    - Усиливать обучение.
    Чтобы создавать качественный продукт, команда должна постоянно совершенствовать свои знания и навыки.
    А руководитель ― обеспечивать команду временем и ресурсами.

    - Принимать важные решения в последний момент.
    Иногда запоздало принятое решение может испортить всю проделанную работу, но для Lean откладывать принятие
    решения до последнего ― это способ собрать как можно больше информации о вопросе. А значит, быть уверенным
    в его правильности и избежать ошибок.

    - Доставлять ценность как можно раньше.
    Чем раньше команда покажет свои наработки заказчику, тем быстрее получит от него обратную связь. Разработчики
    будут уверены, что все делают так, как хочет клиент, и смогут все изменить при необходимости.

    - Объединять сотрудников.
    Когда команда работает сообща и понимает свою ценность, процесс идет быстрее и эффективнее. Поэтому важно
    доверять сотрудникам и ценить то, что они делают.

    - Создавать целостный продукт.
    Команда должна сфокусироваться на качестве, не допускать дефектов и всегда ставить в приоритет потребности
    заказчика.

    - Следить за общим процессом.
    Чтобы работа шла хорошо, каждый в команде должен понимать задачи и иметь возможность постоянно видеть весь
    процесс. Вся информация по проекту должна быть доступна в любое время. Для этих целей в гибких методологиях
    (Scrum, Kanban) используют доску, где отмечены цели, задачи и процесс их выполнения.


3. TDD
Разработка на основе тестирования (TDD) - это процесс разработки программного обеспечения, основанный на
повторении очень короткого цикла разработки: требования превращаются в очень конкретные тестовые примеры, затем
код улучшается, чтобы тесты проходили успешно.

4. BDD
Методология является расширением TDD в том смысле, что перед тем как написать какой-либо тест, необходимо
сначала описать желаемый результат от добавляемой функциональности на предметно-ориентированном языке.

Этапы:
    - Given	Дано Начальное условие. Если начальных условий несколько, то каждое новое условие добавляется с
    новой строки с помощью ключевого слова And.

    - When	Когда (прим.: что-то происходит) Событие, которое инициирует данный сценарий. Если событие нельзя
    раскрыть одним предложением, то все последующие детали раскрываются через ключевые слова And и But.

    - Then Тогда Результат, который пользователь должен наблюдать в конечном итоге. Если результат нельзя
    раскрыть одним предложением, то все последующие детали раскрываются через ключевые слова And и But.

    - And И Вспомогательное ключевое слово, аналог конъюнкции.

    - But Но Вспомогательное ключевое слово, аналог отрицания.