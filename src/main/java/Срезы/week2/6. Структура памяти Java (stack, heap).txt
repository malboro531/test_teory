1. Stack
    стек хранит значения примитивных переменных, создаваемых в методах, а также ссылки на объекты в куче,
    на которые ссылается метод. Когда метод завершает выполнение, блок памяти (frame), отведенный для его нужд,
    очищается, и пространство становится доступным для следующего метода.

    Особенности стека:
    - Он заполняется и освобождается по мере вызова и завершения новых методов
    - Переменные в стеке существуют до тех пор, пока выполняется метод в котором они были созданы
    - Если память стека будет заполнена, Java бросит исключение java.lang.StackOverFlowError
    - Доступ к этой области памяти осуществляется быстрее, чем к куче
    - Является потокобезопасным, поскольку для каждого потока создается свой отдельный стек

2. Heap
    Эта область памяти используется для динамического выделения памяти для объектов и классов JRE во
    время выполнения. Новые объекты всегда создаются в куче, а ссылки на них хранятся в стеке.
    Эти объекты имеют глобальный доступ и могут быть получены из любого места программы.

    Эта область памяти разбита на несколько частей:
    - Young Generation — область где размещаются недавно созданные объекты. Когда она заполняется, происходит
    быстрая сборка мусора
    - Old (Tenured) Generation — здесь хранятся долгоживущие объекты. Когда объекты из Young Generation достигают
    определенного порога «возраста», они перемещаются в Old Generation

    Особенности кучи:
    - Когда эта область памяти полностью заполняется, Java бросает java.lang.OutOfMemoryError
    - Доступ к ней медленнее, чем к стеку
    - Эта память, в отличие от стека, автоматически не освобождается. Для сбора неиспользуемых объектов
    используется сборщик мусора
    - В отличие от стека, куча не является потокобезопасной и ее необходимо контролировать, правильно
    синхронизируя код