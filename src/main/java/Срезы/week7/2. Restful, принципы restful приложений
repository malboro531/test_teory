RESTful (Representational State Transfer) - это архитектурный стиль, который описывает принципы проектирования
веб-сервисов и приложений. Вот основные принципы RESTful:

1. Ресурсы (Resources): Все данные и функциональность представляются в виде ресурсов, которые могут быть доступны по
уникальным URL (Uniform Resource Locator). Ресурсы могут быть объектами, коллекциями объектов или даже абстрактными
концепциями.

2. Унифицированный интерфейс (Uniform Interface): RESTful API должен иметь унифицированный интерфейс, который включает
в себя стандартные методы HTTP, такие как GET (получение данных), POST (создание данных), PUT (обновление данных) и
DELETE (удаление данных). Этот принцип обеспечивает простоту и надежность API.

3. Состояние клиента (Stateless): Каждый запрос клиента к серверу должен содержать всю необходимую информацию для его
выполнения. Сервер не должен сохранять состояние между запросами. Это обеспечивает масштабируемость и надежность
системы.

4. Представление (Representation): Ресурсы могут иметь разные представления, такие как JSON, XML, HTML и другие форматы
данных. Клиент может выбирать представление ресурса, которое ему нужно.

5. Связи (Links): Ресурсы могут иметь связи (ссылки) на другие ресурсы, что позволяет клиентам навигировать по API и
открывает возможности для связанных действий.

6. Состояние (State): Состояние ресурса передается между клиентом и сервером в запросах и ответах. Это позволяет клиенту
понимать текущее состояние ресурса.

7. Кэширование (Caching): RESTful поддерживает кэширование данных, что позволяет уменьшить нагрузку на сервер и улучшить
производительность.

8. Клиент-серверная архитектура (Client-Server): RESTful следует принципу разделения клиента и сервера. Клиент и сервер
могут развиваться и масштабироваться независимо друг от друга.

9. Код по требованию (Code on Demand): Этот принцип является необязательным и предполагает, что сервер может отправить
клиенту выполнимый код, который клиент может выполнить. Это редко используется в практике RESTful.

10. Идемпотентность (Idempotent): Методы HTTP GET, PUT и DELETE считаются идемпотентными, что означает, что повторное
выполнение запроса не приведет к изменению состояния сервера. Это важно для обеспечения безопасности и надежности
операций.

RESTful API используется для построения распределенных систем, веб-сервисов, а также для создания чистых и простых
интерфейсов. Эти принципы способствуют улучшению масштабируемости, производительности и надежности приложений и
веб-сервисов.