1. Основные методы HTTP:

GET: Метод GET используется для запроса данных с сервера. Клиент отправляет GET-запрос, и сервер возвращает запрошенные
    данные. GET-запросы обычно используются для получения информации, и они не должны изменять состояние сервера.

POST: Метод POST используется для отправки данных на сервер с целью создания или обновления ресурса. POST-запросы могут
    содержать данные в теле запроса, и они часто используются для отправки данных формы на сервер.

PUT: Метод PUT используется для обновления существующего ресурса на сервере или создания нового ресурса, если его нет.
    Клиент отправляет PUT-запрос с данными, которые должны быть сохранены на сервере.

DELETE: Метод DELETE используется для удаления ресурса на сервере. Клиент отправляет DELETE-запрос с указанием ресурса,
    который должен быть удален.

OPTIONS: Метод OPTIONS используется для определения функциональных возможностей возможностей веб-сервера. Позволяет
    клиенту узнать какие методы запросов и ресурсы поддерживаются сервером.

2. Что такое идемпотентность и какие методы являются идемпотентными

    Идемпотентным называют такой метод API, повторный вызов которого не меняет состояния ресурса.
    Метод называется идемпотентным, если при выполнении одинакового запроса больше одного раза, получается один
    и тот же результат, состояние ресурса не меняется. GET, HEAD, PUT, DELETE, OPTIONS.

3. Разница GET/POST, PUT/POST, PUT/PATCH

- GET/POST - методы, которые могут отправлять данные на сервер.
    Метод GET добавляет закодированные данные в URI, используется для извлечения данных.
    Метод POST данные добавляются в тело, используется для хранения или обновления данных.

- PUT/POST разница в том, что PUT является идемпотентным, т.е. единичный и множественные вызовы этого метода,
    с идентичным набором данных, будут иметь тот же результат выполнения (без сторонних эффектов), в случае с POST,
    множественный вызов с идентичным набором данных может повлечь за собой сторонние эффекты, например дублирование
    записей в БД.

- PUT/PATCH. PATCH используется для частичного изменения ресурса.
    PUT создает новый ресурс или заменяет представление целевого ресурса, данными представленными в теле запроса.
    Иными словами, в PATCH вложенный объект содержит набор инструкций, описывающих, как ресурс должен быть модифицирован
    для создания новой версии,
    а в PUT содержится новая версия ресурса целиком. В отличие от PUT, PATCH не идемпотентный, это подразумевает
    что успешные идентичные PATCH запросы могут иметь отличные эффекты. Однако, возможно выдавать запросы PATCH
    таким образом, чтобы они были идемпотентные.

        Примечание про PATCH
        Например, если формат исправления имеет вид {change: 'Stock' add: -1}, то любой запрос на исправление
        после первого будет иметь эффект, отличный от первого запроса, т. е. дальнейшее уменьшение предполагаемого
        запаса продукта.