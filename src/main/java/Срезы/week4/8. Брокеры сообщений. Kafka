Брокеры сообщений Kafka - это программные серверы. Они предоставляют централизованный механизм для публикации, хранения
и доставки сообщений между различными приложениями или компонентами системы.

Функции Kafka:

- Хранение сообщений: Брокеры Kafka служат для хранения сообщений, позволяя приложениям и компонентам получать доступ к
данным в реальном времени или позже, в зависимости от потребностей.
- Передача данных: Они обеспечивают механизм передачи данных между различными частями системы. Продюсеры отправляют
данные в брокеры, а консьюмеры могут получать их оттуда.
- Шардирование и масштабируемость: Брокеры Kafka разделяют данные на партиции, что позволяет масштабировать систему
горизонтально. Это способствует обработке больших объемов данных и увеличению пропускной способности.

Что содержат сообщения:

Сообщения в Kafka - это бинарные данные, и их формат определяется приложением. Типично, сообщения могут содержать
различные данные, такие как журналы, метрики, события, команды, обновления и другую информацию. Особенность Kafka
заключается в том, что она не накладывает ограничения на формат сообщений, и это позволяет использовать ее для разных
целей.

Принципы работы брокеров Kafka:

- Публикация сообщений (Producer): Продюсеры отправляют сообщения в один или несколько топиков.
- Хранение и разделение (Broker): Брокеры Kafka хранят сообщения в партициях топиков. Каждый топик может иметь несколько
партиций, которые распределены по брокерам. Это обеспечивает масштабируемость и отказоустойчивость.
- Подписка на сообщения (Consumer): Консьюмеры могут подписываться на топики и получать сообщения. Они могут читать
данные в реальном времени или загружать их асинхронно.
- Хранение с учетом политики удержания (Retention Policy): Kafka позволяет настраивать, как долго данные будут храниться
в топиках с учетом политики удержания. Это означает, что данные могут быть доступны для чтения в течение заданного
периода времени.
- Масштабирование (Scalability): Брокеры Kafka могут быть объединены в кластеры для обеспечения масштабируемости и
отказоустойчивости. Если один брокер выходит из строя, другие продолжают работать.
- Согласование (ZooKeeper): Apache ZooKeeper используется для управления состоянием и конфигурацией брокеров Kafka в
кластере.

Вот некоторые ключевые компоненты и понятия, связанные с Apache Kafka:

- Producer (Продюсер): Это компонент, который отвечает за публикацию сообщений в Kafka-топики. Продюсеры отправляют
данные в топики, которые могут быть подписаны другими компонентами.
- Topic (Топик): Топик - это категория или канал, в который данные публикуются продюсерами. Это основной механизм
организации данных в Kafka.
- Broker (Брокер): Брокер - это сервер Kafka, который управляет хранением и обработкой сообщений. Каждый брокер в
кластере Kafka может иметь несколько реплик топиков для обеспечения отказоустойчивости.
- Consumer (Консьюмер): Консьюмеры подписываются на топики и обрабатывают сообщения, отправленные в них продюсерами. Это
компоненты, которые считывают и анализируют данные из Kafka.
- Partition (Партиция): Топики могут быть разделены на несколько партиций, каждая из которых представляет собой
отдельное хранилище сообщений. Это позволяет увеличить пропускную способность и масштабируемость.
- ZooKeeper: ZooKeeper используется для управления и согласования брокеров Kafka в кластере. Он помогает отслеживать
состояние и конфигурацию Kafka.
- Retention Policy (Политика удержания): Kafka позволяет настраивать, как долго данные будут храниться в топиках.
Политика удержания определяет, сколько времени данные будут доступны для потребителей.

Интеграционная шина – это программно-аппаратная архитектура среднего уровня, которая обеспечивает базовые
сервисы для более специализированных и сложных информационных систем. Например, такая шина может в
автоматическом режиме синхронизировать справочники в различных базах данных или предоставлять
централизованный веб-сервис авторизации пользователей.
    - конфигурирует
    - логирует
    - маршрутизирует