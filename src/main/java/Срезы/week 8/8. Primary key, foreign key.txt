Первичный ключ (Primary Key) и вторичный ключ (Secondary Key) - это два важных понятия в реляционных базах данных.

1. Первичный ключ (Primary Key):
- Уникальность: Первичный ключ должен содержать уникальные значения для каждой записи в таблице. Это гарантирует, что
каждая строка данных в таблице будет иметь уникальный идентификатор.
- Не NULL: Значения первичного ключа не могут быть NULL (пустыми). Это означает, что каждая запись должна иметь значение
первичного ключа.
- Идентификация записи: Первичный ключ используется для однозначной идентификации записи в таблице. Это делает его
полезным для ссылок между таблицами и для обеспечения целостности данных.
- Ограничение уникальности: В большинстве СУБД систем первичный ключ автоматически создает ограничение уникальности, что
гарантирует уникальность значений.

Пример создания таблицы с первичным ключом в SQL:
CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50)
);

2. Вторичный ключ (Secondary Key):

- Индексация: Вторичный ключ также является индексом для столбцов таблицы, но он не обязательно должен быть уникальным.
Одно и тот же значение вторичного ключа может встречаться в нескольких записях таблицы.
- Связи между таблицами: Вторичные ключи часто используются для создания связей между таблицами. Например, можно создать
вторичный ключ, который ссылается на первичный ключ другой таблицы, что позволяет устанавливать связи между данными.
- Оптимизация запросов: Использование вторичных ключей может ускорить выполнение запросов, так как они обеспечивают
быстрый доступ к данным.

Пример создания таблицы с вторичным ключом в SQL:
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

В данном примере, customer_id является вторичным ключом, который ссылается на первичный ключ (customer_id) таблицы
customers. Это создает связь между таблицами orders и customers.