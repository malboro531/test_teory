Формализация данных в базе данных (БД) является процессом определения структуры данных, их типов, ограничений и связей
между данными. Формализация данных играет важную роль в проектировании и создании БД, так как она определяет, каким
образом данные будут храниться и как к ним можно будет обращаться. Здесь представлены основные аспекты формализации
данных в базах данных до четвертой нормальной формы (4NF).

Первая нормальная форма (1NF): Для достижения 1NF данные в каждой таблице должны быть атомарными, то есть не допускаются
множественные значения в одной ячейке. Каждая строка должна иметь уникальный идентификатор, называемый первичным ключом.

Вторая нормальная форма (2NF): каждый столбец, который не является частью первичного ключа, должен зависеть от всего
первичного ключа, а не только от его части.

Третья нормальная форма (3NF): В 3NF все поля, которые не являются первичными ключами, не должны зависеть друг от друга.
Это помогает избежать транзитивных зависимостей между данными.

Четвертая нормальная форма (4NF): В 4NF целью является устранение зависимостей между неключевыми атрибутами, которые
могут вызывать множественные записи для одного ключа. Это достигается путем выделения многозначных зависимостей и
создания отдельных таблиц для таких атрибутов.

Примеры формализации данных:

1NF: Если у нас есть таблица "Заказы" с колонкой "Список товаров", где каждая ячейка содержит список товаров (например,
"продукт1, продукт2, продукт3"), то это нарушает 1NF. Мы должны разделить этот список на отдельные строки или создать
отдельную таблицу "Товары заказа".

2NF: Предположим, у нас есть таблица "Заказы" с колонкой "Сумма заказа" и колонкой "Имя клиента". Если сумма заказа
зависит только от заказа (первичного ключа), а не от имени клиента, то это нарушает 2NF. Мы должны выделить сумму заказа
в отдельную таблицу, связанную с таблицей заказов.

3NF: Если у нас есть таблица "Студенты" с колонкой "Адрес", а также колонкой "Имя университета" и "Город университета",
и эти данные зависят от адреса студента, то это нарушает 3NF. Мы должны выделить таблицу "Университеты" и "Города" и
связать их с таблицей "Студенты".

4NF: В 4NF мы можем рассмотреть более сложные случаи, например, в таблице "Заказы" есть множество дополнительных
атрибутов, которые зависят от определенного продукта в заказе. В этом случае мы можем создать отдельную таблицу
"Атрибуты продукта" и связать ее с таблицей "Заказы".

Формализация данных помогает сделать структуру БД более эффективной, уменьшить дублирование данных и упростить
выполнение SQL-запросов для извлечения информации.